{"version":3,"sources":["components/layouts/Navigation.js","components/Home.js","components/Address.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","props","to","style","height","Home","state","className","Component","Address","public_key","private_key","error_msg","getAddress","bind","fetch","then","res","console","log","json","data","setState","catch","error","onClick","this","color","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAqBeA,MAjBf,SAAoBC,GAChB,OACI,eAAC,WAAD,WACI,gCACI,cAAC,IAAD,CAAMC,GAAG,IAAT,wBACA,cAAC,IAAD,CAAMA,GAAG,WAAT,qBACA,cAAC,IAAD,CAAMA,GAAG,eAAT,0BACA,cAAC,IAAD,CAAMA,GAAG,SAAT,oBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,uBAEJ,qBAAKC,MAAO,CAACC,OAAQ,aCqBlBC,E,kDA9BX,WAAYJ,GAAO,IAAD,8BACd,cAAMA,IACDK,MAAQ,GAFC,E,qDAQd,OACI,cAAC,WAAD,UACI,sBAAKC,UAAU,OAAf,UACI,cAAC,EAAD,IACA,sBAAKA,UAAU,YAAf,UACI,4CACA,4d,GAfLC,a,QC8EJC,E,kDA5EX,WAAYR,GAAO,IAAD,8BACd,cAAMA,IACDK,MAAQ,CACTI,WAAY,GACZC,YAAa,GACbC,UAAW,IAGf,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBARJ,E,yDAWL,IAAD,OACRC,MACI,mBAEHC,MAAM,SAAAC,GAEH,OADAC,QAAQC,IAAIF,GACLA,EAAIG,UAEdJ,MAAM,SAAAK,GACH,EAAKC,SAAS,CACVZ,WAAYW,EAAKX,WACjBC,YAAaU,EAAKV,YAClBC,UAAW,QAGlBW,OAAO,SAAAC,GACJN,QAAQC,IAAIK,GACZ,EAAKF,SAAS,CACVZ,WAAY,GACZC,YAAa,GACbC,UAAW,2E,+BAMnB,OACI,eAAC,WAAD,WACI,cAAC,EAAD,IACA,sBAAKL,UAAU,oBAAf,UACI,yCACA,2HAGI,+BACI,4CACA,gDAEJ,2CAAiB,uBAPrB,IAO2B,uBAP3B,0GASuB,uBATvB,IAS8B,uBAC1B,4CAVJ,IAUuB,uBAVvB,IAU8B,uBAV9B,0HAYyC,0FAZzC,kHAgBA,wBAAQkB,QAAUC,KAAKb,WAAvB,gCAE8B,KAA1Ba,KAAKpB,MAAMI,YACX,0CACa,6CAAqBgB,KAAKpB,MAAMI,WAD7C,IAC0D,uBAD1D,YAEa,8CAAsBgB,KAAKpB,MAAMK,eAIrB,KAAzBe,KAAKpB,MAAMM,WACP,mBAAGT,MAAO,CAACwB,MAAO,OAAlB,SAA4BD,KAAKpB,MAAMM,sB,GArE7CJ,aCgBPoB,MAbf,WACE,OACE,qBAAKrB,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,IAAIC,UAAY1B,IAClC,cAAC,IAAD,CAAOyB,KAAK,WAAWC,UAAYtB,YCF9BuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.86e8be3c.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction Navigation(props){\r\n    return (\r\n        <Fragment>\r\n            <nav>\r\n                <Link to=\"/\">BlockChain</Link>\r\n                <Link to=\"/address\">Address</Link>\r\n                <Link to=\"/transaction\">Transactions</Link>\r\n                <Link to=\"/block\">Blocks</Link>\r\n                <Link to=\"/other\">Others</Link>\r\n            </nav>\r\n            <div style={{height: \"8vw\"}}>\r\n\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Navigation;\r\n","import React, { Component, Fragment } from 'react';\r\n\r\nimport Navigation from './layouts/Navigation';\r\n\r\nclass Home extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Fragment>\r\n                <div className=\"home\">\r\n                    <Navigation />\r\n                    <div className=\"container\">\r\n                        <h3>Blockchain</h3>\r\n                        <p>\r\n                            &nbsp; &nbsp; The world is moving from physical unreliable currency to secure distributed \r\n                            cryptocurrency, why not you ? Make the transformation now into the secure world of \r\n                            cryptocurrency by creating an address, with just a click away. For creating an address, \r\n                            we don't need any of your details, still works like magic holding your money to \r\n                            yourself with an unlimited amount of security than that of any of your previous \r\n                            secure banks..  \r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Home;","import React, { Component, Fragment } from 'react';\r\n\r\nimport Navigation from './layouts/Navigation';\r\n\r\n\r\nclass Address extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            public_key: \"\",\r\n            private_key: \"\",\r\n            error_msg: \"\",\r\n        }\r\n\r\n        this.getAddress = this.getAddress.bind(this);\r\n    }\r\n\r\n    getAddress(){\r\n        fetch(\r\n            \"/create_address\"\r\n        )\r\n        .then( res => {\r\n            console.log(res); \r\n            return res.json() \r\n        } )\r\n        .then( data => {\r\n            this.setState({\r\n                public_key: data.public_key,\r\n                private_key: data.private_key,\r\n                error_msg: \"\",\r\n            })\r\n        })\r\n        .catch( error => {\r\n            console.log(error);\r\n            this.setState({\r\n                public_key: \"\",\r\n                private_key: \"\",\r\n                error_msg: \"Server Unavailable. Check your internet connection and try again.\",\r\n            })\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Fragment>\r\n                <Navigation />\r\n                <div className=\"address container\">\r\n                    <h3>Address</h3>\r\n                    <p>\r\n                        Address is like the account number for your account. It consists of two components\r\n                        namely,\r\n                        <ul>\r\n                            <li>Public Key</li>\r\n                            <li>Private Key</li>\r\n                        </ul>\r\n                        <b>Public Key</b><br/> <br/>\r\n                        &nbsp; &nbsp; This is the sharable part of your account. It is needed for other parties\r\n                        to send you money. <br /> <br />\r\n                        <b>Private Key</b> <br /> <br />\r\n                        &nbsp; &nbsp; This key must not be shared to anyone. If anyone holds your money, they \r\n                        can easily handle all your currency. <i>Only create new addresses by using trusted applications. </i>\r\n                        Don't use random websites or applications for creating your address. They could have a copy of \r\n                        private keys. \r\n                    </p>\r\n                    <button onClick={ this.getAddress }>Create New Address</button>\r\n                    {\r\n                        this.state.public_key !== \"\" && \r\n                        <p> \r\n                            Your new <b>Public Key: </b>{ this.state.public_key } <br />\r\n                            Your new <b>Private Key: </b>{ this.state.private_key }\r\n                        </p>\r\n                    }\r\n                    {\r\n                        this.state.error_msg !== \"\" &&\r\n                            <p style={{color: \"red\"}}>{ this.state.error_msg }</p>\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Address;","import './App.css';\nimport React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport Home from './components/Home';\nimport Address from './components/Address';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={ Home } />\n          <Route path=\"/address\" component={ Address } />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}